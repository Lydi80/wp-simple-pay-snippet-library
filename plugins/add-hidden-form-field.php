<?php
/**
 * Plugin Name: WP Simple Pay - Add Hidden Form Field
 * Plugin URI: https://wpsimplepay.com
 * Author: Sandhills Development, LLC
 * Author URI: https://sandhillsdev.com
 * Description: Add a hidden field inside the <form> tag and creates a confirmation template tag to display the value.
 * Version: 1.0
 */

/**
 * Creates a hidden field with the current post/page ID as the value.
 *
 * @param int                           $form_id Current Form ID.
 * @param SimplePay\Core\Abstracts\Form $form Form instance.
 */
function simpay_custom_form_before_form_bottom( $form_id, $form ) {
	echo '<input name="current_post_id" type="hidden" value="' . absint( get_the_ID() ) . '" />';
}
add_action( 'simpay_form_before_form_bottom', 'simpay_custom_form_before_form_bottom', 10, 2 );

/**
 * Saves the value of the hidden field to the Subscription or PaymentIntent object.
 *
 * @param array                         $object_args Object arguments.
 * @param SimplePay\Core\Abstracts\Form $form Form instance.
 * @param array                         $form_data Form data generated by the client.
 * @param array                         $form_values Values of named fields in the payment form.
 */
function simpay_custom_form_save_metadata( $object_args, $form, $form_data, $form_values ) {
	// Save the `current_post_id` field value to the object's metadata.
	if ( isset( $form_values['current_post_id'] ) ) {
		$object_args['metadata']['Post/Page ID'] = sanitize_text_field( $form_values['current_post_id'] );
	}

	return $object_args;
}
add_filter( 'simpay_get_paymentintent_args_from_payment_form_request', 'simpay_custom_form_save_metadata', 10, 4 );
add_filter( 'simpay_get_subscription_args_from_payment_form_request', 'simpay_custom_form_save_metadata', 10, 4 );

/**
 * Register a new template tag.
 *
 * @param array $tags Template tags.
 * @return array
 */
function simpay_custom_template_tags( $tags ) {
	$tags[] = 'current-post-id';

	return $tags;
}
add_filter( 'simpay_payment_details_template_tags', 'simpay_custom_template_tags' );

/**
 * Replaces the {current-post-id} template tag with "Post/Page ID" metadata.
 *
 * @param string $value Template tag value.
 * @param array  $payment_confirmation_data {
 *   Contextual information about this payment confirmation.
 *
 *   @type \Stripe\Customer               $customer Stripe Customer
 *   @type \SimplePay\Core\Abstracts\Form $form Payment form.
 *   @type object                         $subscriptions Subscriptions associated with the Customer.
 *   @type object                         $paymentintents PaymentIntents associated with the Customer.
 * }
 * @return string
 */
function simpay_custom_template_tag_current_post_id( $value, $payment_confirmation_data ) {
	// Retrieve metadata from a Subscription.
	if ( isset( $payment_confirmation_data['subscriptions'] ) && ! empty( $payment_confirmation_data['subscriptions'] ) ) {
		$object = current( $payment_confirmation_data['subscriptions'] );

	// Retrieve metdata from a PaymentIntent.
	} else {
		$object = current( $payment_confirmation_data['paymentintents'] );
	}

	return $object->metadata['Post/Page ID'];
}
add_filter( 'simpay_payment_confirmation_template_tag_current-post-id', 'simpay_custom_template_tag_current_post_id', 10, 2 );
