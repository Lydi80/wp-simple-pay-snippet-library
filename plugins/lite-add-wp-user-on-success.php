<?php
/**
 * Plugin Name: WP Simple Pay - Create WP User
 * Plugin URI: https://wpsimplepay.com
 * Author: Sandhills Development, LLC
 * Author URI: https://sandhillsdev.com
 * Description: Create a WordPress user account after a successful purchase.
 * Version: 1.0
 */

/**
 * Creates a new WordPress user when a Checkout Session is created.
 *
 * It is possible the Checkout Session will be abandoned, leaving a WordPress
 * customer record created for an incomplete payment.
 *
 * WP Simple Pay Pro utilizes Stripe Webhooks to only run events after it is
 * known for sure that the payment went through.
 *
 * Note: The Customer > Email field must be included on-page.
 *
 * @param \Stripe\Checkout\Sesssion     $session Stripe Checkout Session.
 * @param SimplePay\Core\Abstracts\Form $form Form instance.
 * @param array                         $form_data Form data generated by the client.
 * @param array                         $form_values Values of named fields in the payment form.
 * @param int                           $customer_id Stripe Customer ID.
 */
function simpay_custom_create_user( $session, $form, $form_data, $form_values, $customer_id ) {
	// Retrieve the full Customer object attached to the Session.
	$customer = SimplePay\Core\Payments\Stripe_API::request( 'Customer', 'retrieve', $customer_id );

	// Email must be collected.
	if ( ! isset( $customer->email ) ) {
		throw new \Exception( 'Email address not found on page.' );
	}

	$email_address = $customer->email;

	// Don't create duplicate records.
	if ( false !== username_exists( $email_address ) ) {
		throw new \Exception( 'Email address already exists.' );
	}

	// Creates a new user and notifies both the user and the site admin.
	//
	// @link https://developer.wordpress.org/reference/functions/wp_insert_user/
	// @link https://developer.wordpress.org/reference/functions/wp_new_user_notification/
	$user_id  = wp_insert_user( array(
		'user_email' => $email_address,
		'user_login' => $email_address,
		'nickname'   => $email_address,
		'role'       => 'subscriber',
		'user_pass'  => null,
	) );

	if ( is_wp_error( $user_id ) ) {
		throw new \Exception( $user_id->get_error_message() );
	}

	wp_new_user_notification( $user_id, null, 'both' );
}
add_action( 'simpay_after_checkout_session_from_payment_form_request', 'simpay_custom_create_user', 10, 5 );
